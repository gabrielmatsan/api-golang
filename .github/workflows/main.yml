name: CI

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and push Docker Image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Golang setup
        id: golang
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.x

      - name: Install dependencies
        run: |
          go mod download
          go mod tidy

      - name: Run tests
        run: |
          echo "Running tests..." # TODO: Add tests

      - name: Build Go Application
        run: |
          go build -o myapp ./cmd/main.go

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login in to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Gera√ß√£o da tag
      - name: Generate tag
        id: generate-tag
        run: |
          SHA=$(echo $GITHUB_SHA | head -c7)
          echo "sha=$SHA" >> $GITHUB_OUTPUT

        # Build Docker Image
      - name: Build Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          load: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ steps.generate-tag.outputs.sha }}
            test-image:latest
          cache-from: type=gha

        # TESTES da imagem Docker
      - name: Test Docker Image
        run: |
          echo "üß™ Testando a imagem Docker..."

          # Teste 1: Verificar se a imagem foi criada
          docker images test-image:latest

          # Teste 2: Executar container e verificar se inicia
          docker run --rm -d --name test-container -p 8080:8080 test-image:latest
          sleep 5

          # Teste 3: Verificar se a aplica√ß√£o responde (ajuste conforme sua app)
          # curl -f http://localhost:8080/health || exit 1

          # Teste 4: Verificar logs do container
          docker logs test-container

          # Teste 5: Parar container de teste
          docker stop test-container

          echo "‚úÖ Todos os testes da imagem passaram!"

      - name: Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: . # O contexto de constru√ß√£o do Docker ('.' significa o diret√≥rio atual)
          push: true # Se true, a imagem Docker ser√° enviada para o registro
          tags: |
            ghcr.io/${{ github.repository }}:${{ steps.generate-tag.outputs.sha }}
          cache-from: type=gha # Habilita o cache de camadas do Docker para constru√ß√µes mais r√°pidas
